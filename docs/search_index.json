[["index.html", "AlberdiLab | Manuscript in prep Plecotus auritus metagenomics Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Manuscript in prep Plecotus auritus metagenomics Orly Razgour, Antton Alberdi[University of Copenhagen, raphael.eisenhofer@sund.ku.dk] 2024-11-19 Chapter 1 Introduction 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/adaptation_hologenomics.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(rairtable) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) #library(lmerTest) library(Hmsc) library(corrplot) library(lme4) library(nlme) library(ANCOMBC) "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Prepare color scheme 2.4 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/DMB0172_metadata.tsv.gz&quot;) %&gt;% rename(sample=1) 2.1.2 Read counts read_counts &lt;- read_tsv(&quot;data/DMB0172_counts.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample))) 2.1.3 Genome taxonomy genome_metadata &lt;- read_tsv(&quot;data/DMB0172_mag_info.tsv.gz&quot;) %&gt;% rename(length=mag_size)%&gt;% semi_join(., read_counts, by = &quot;genome&quot;) %&gt;% arrange(match(genome,read_counts$genome)) 2.1.4 Genome base hits genome_coverage &lt;- read_tsv(&quot;data/DMB0172_coverage.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% semi_join(., genome_metadata, by = &quot;genome&quot;)%&gt;% arrange(match(genome, read_counts$genome)) 2.1.5 Genome tree genome_tree &lt;- read_tree(&quot;data/DMB0172.tree.gz&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips 2.1.6 Genome annotations Downloading individual annotation files from ERDA using information in Airtable and writing them to a single compressed table takes a while. The following chunk only needs to be run once, to generate the genome_annotations table that is saved in the data directory. Note that the airtable connection requires a personal access token. airtable(&quot;MAGs&quot;, &quot;appWbHBNLE6iAsMRV&quot;) %&gt;% #get base ID from Airtable browser URL read_airtable(., fields = c(&quot;ID&quot;,&quot;mag_name&quot;,&quot;number_genes&quot;,&quot;anno_url&quot;), id_to_col = TRUE) %&gt;% #get 3 columns from MAGs table filter(mag_name %in% paste0(genome_metadata$genome,&quot;.fa&quot;)) %&gt;% #filter by MAG name filter(number_genes &gt; 0) %&gt;% #genes need to exist select(anno_url) %&gt;% #list MAG annotation urls pull() %&gt;% read_tsv() %&gt;% #load all tables rename(gene=1, genome=2, contig=3) %&gt;% #rename first 3 columns write_tsv(file=&quot;data/genome_annotations.tsv.xz&quot;) #write to overall compressed file genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Filter reads by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.2.3 Distill annotations into GIFTs genome_gifts_raw &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.3 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.4 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, file = &quot;data/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) 3.1 Sequencing reads statistics sample_metadata %&gt;% summarise(Total=sum(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), mean=mean(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), sd=sd(reads_post_fastp * 150 / 1000000000) %&gt;% round(2)) %&gt;% unite(&quot;Average&quot;,mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() .table td.tinytable_css_id0czl98gkya13fnouah2w, .table th.tinytable_css_id0czl98gkya13fnouah2w { border-bottom: solid 0.1em #d3d8dc; } Total Average 1011.39 7.02 ± 10.7 3.2 DNA fractions sequence_fractions &lt;- read_counts %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;value&quot;) %&gt;% group_by(sample) %&gt;% summarise(mags = sum(value)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% select(sample,mags,metagenomic_bases,host_bases,bases_lost_fastp_percent) %&gt;% mutate(mags_bases = mags*146) %&gt;% mutate(lowqual_bases = ((metagenomic_bases+host_bases)/(1-bases_lost_fastp_percent))-(metagenomic_bases+host_bases)) %&gt;% mutate(unmapped_bases = metagenomic_bases - mags_bases) %&gt;% mutate(unmapped_bases = ifelse(unmapped_bases &lt; 0, 0, unmapped_bases)) %&gt;% select(sample, lowqual_bases, host_bases, unmapped_bases, mags_bases) sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% tt() .table td.tinytable_css_idsx5g4egaqrl6bvlf5fg9, .table th.tinytable_css_idsx5g4egaqrl6bvlf5fg9 { border-bottom: solid 0.1em #d3d8dc; } Sample Low quality Mapped to host Unmapped Mapped to MAGs EHI00183 0.24048444 0.657867674 3.17388006 0.522027526 EHI00184 0.43959001 2.535444891 0.00000000 0.040519380 EHI00185 0.48841577 0.698189337 1.13233992 0.225556568 EHI00186 1.55299362 1.602406648 0.75919852 0.426815816 EHI00187 0.69156279 3.698760649 1.31822215 0.120666810 EHI00188 17.32099369 29.743751512 62.09185917 15.985778126 EHI00189 0.48155580 0.274949231 0.57404118 0.273854682 EHI00192 0.23727630 0.003737928 0.69049527 0.003834398 EHI00201 0.28582226 3.951437500 2.72817519 1.329198454 EHI00283 1.21931896 5.809306852 4.07839940 6.493074790 EHI00291 0.13369365 2.262443885 0.25087088 0.893677680 EHI00298 0.25098220 0.442733590 1.54609705 4.676589364 EHI00344 0.02112383 0.431801171 0.00000000 0.055609794 EHI00345 0.30214864 4.235676300 1.70799483 3.983207332 EHI00348 0.07041971 0.153505886 1.01888942 0.063101784 EHI00352 0.02490425 0.222418453 0.00000000 0.105176502 EHI00356 0.01818980 0.343329405 0.00000000 0.013934240 EHI00357 0.02155217 0.216957127 0.00000000 0.032002616 EHI00358 0.01308903 0.368913871 0.00000000 0.159682828 EHI00366 0.29490048 1.086948047 0.76801336 1.112703814 EHI00372 0.23363423 4.199310667 0.00000000 0.008103876 EHI00397 0.16823933 0.037077679 0.06241076 3.547924538 EHI00431 0.46169473 0.883563696 2.89889565 0.127329520 EHI00442 0.28396498 4.193297419 0.00000000 0.020939612 EHI00474 0.21732550 0.014607431 0.13643616 3.037557010 EHI00485 0.55011480 0.079219620 5.11342663 1.569779152 EHI00500 0.28448087 3.917233332 0.00000000 0.079243836 EHI00502 0.29169254 0.206802421 0.27404308 3.543379266 EHI00503 0.29115932 4.861179882 0.00000000 0.043754156 EHI00511 0.39117359 0.474346683 0.43109805 3.910640368 EHI00515 0.27691392 3.467436785 0.00000000 0.012300062 EHI00523 1.29573370 2.715429548 2.22967895 0.451335202 EHI00531 0.39832321 0.487608387 4.52131132 0.681062990 EHI00540 0.53418711 2.321891643 1.29081012 2.188181424 EHI00542 0.54438736 4.640309235 0.00000000 0.173247834 EHI00555 0.25665590 3.828772904 0.00000000 0.002083858 EHI00570 1.11547649 0.331372750 2.38327729 1.499755070 EHI00571 0.66458379 3.966333942 0.80691988 0.359705894 EHI00577 0.41833088 0.316473625 2.25371178 1.325201120 EHI00580 0.44535195 0.665686316 3.03021609 1.544931850 EHI00581 0.39594506 1.423695821 3.14033450 0.295598024 EHI00597 0.56748913 3.163207469 1.69282394 0.142857058 EHI00599 0.54442491 0.963491007 4.24165915 0.780846836 EHI00607 0.58136582 2.286987494 3.47819957 0.738427120 EHI00608 1.24047566 6.433538634 0.32908530 2.327758008 EHI00615 0.43417087 0.196449394 3.54512148 1.460107456 EHI00622 0.97739046 1.596297201 0.85182690 1.900113934 EHI00624 0.47394102 3.391726314 1.46461702 0.624867444 EHI00625 0.45117553 0.380971311 0.80894836 4.917648504 EHI00630 0.52501365 6.611139746 0.00000000 0.253370736 EHI00634 0.58636521 2.044740786 1.76316422 3.068084880 EHI00637 0.35813313 2.239229860 4.20831677 0.108932644 EHI00639 0.32863040 0.909162728 2.01524769 0.914274776 EHI00642 0.85603042 1.241043987 1.97074587 0.766028128 EHI00643 0.72929661 3.208305343 1.35434100 0.273200456 EHI00646 0.50481747 0.723554760 2.85814430 2.628545164 EHI00648 0.59402460 2.825386366 2.34552000 3.626706430 EHI00651 0.33836573 1.532843651 1.10767796 0.886155468 EHI00652 2.66364594 0.736605898 2.18255319 0.244109372 EHI00653 1.22224901 0.328424848 4.29211570 2.106765838 EHI00654 0.43775318 4.301997558 2.27167137 1.092700792 EHI00655 0.29001084 0.286004587 0.66775049 3.622143784 EHI00656 0.34407814 1.372983042 0.54044631 2.966765406 EHI00660 0.64012110 2.583799787 2.26704684 0.043129276 EHI00804 0.38831017 1.525552927 3.45922381 0.529659092 EHI00868 0.51714305 1.993833357 0.94815818 0.993823314 EHI00878 0.18482571 2.569484428 0.13661332 0.601598548 EHI00885 0.25023388 0.199309302 0.73541941 2.671934612 EHI00894 0.31987836 0.802322705 1.42883596 2.046891676 EHI00899 0.36269734 1.957367889 1.79720507 0.668167102 EHI00913 0.44483366 0.225524552 2.30962469 0.899458404 EHI00923 0.33145793 0.668144005 3.46856617 0.456179190 EHI00930 0.47331656 1.278181484 1.83892279 2.573161670 EHI00934 0.20554556 4.408118442 0.00000000 0.190924784 EHI00943 0.23814123 3.754400366 0.00000000 0.047087482 EHI00982 0.12639718 2.593576222 0.00000000 0.031154502 EHI01007 0.64409508 0.010218762 1.49224629 2.538105464 EHI01021 0.28997720 5.220964600 0.00000000 0.113829046 EHI01027 0.31966389 3.909320910 0.00000000 0.118061294 EHI01030 0.29925549 5.249167114 0.00000000 0.200001312 EHI01662 0.19668591 0.407994682 1.86758634 0.909849370 EHI01663 0.16714033 0.135532070 0.89430674 0.569021860 EHI01664 0.09503831 0.002310882 0.41994759 0.645322920 EHI01665 0.23152613 0.313855082 2.14080675 1.141590644 EHI01666 0.29931700 0.064808279 4.30353581 1.124951608 EHI01667 0.33530766 1.898711340 1.25287869 1.879642106 EHI01668 0.36072457 0.228258364 4.15240073 1.641335942 EHI01669 0.35790117 5.295257446 0.53403331 1.716927880 EHI01670 0.16789863 1.066870044 0.48405893 0.558388096 EHI01671 0.34208534 2.973120120 1.93568666 0.881444486 EHI01672 0.50915257 2.042610793 4.46834069 1.919856346 EHI01673 0.54097519 4.018107042 2.77471897 2.048088000 EHI01674 0.20918228 0.183164274 1.91635815 0.718723398 EHI01675 0.12520854 0.281154984 0.88197962 0.835541356 EHI01676 1.12581422 4.260660013 6.52378617 2.387740502 EHI01677 0.19182214 3.900103243 0.20949614 0.805353374 EHI01678 0.33455035 0.437813795 0.81586461 0.983888744 EHI01679 0.79511945 2.361842589 10.08983918 1.628429980 EHI01680 0.20062142 0.223859163 0.51680770 0.229212116 EHI01681 0.35051025 2.688975452 2.41801966 0.808044738 EHI01682 1.04936565 12.470607678 6.33882090 2.988767168 EHI01683 1.13081730 7.140731755 10.17268270 2.035287450 EHI01684 1.13131575 13.730605250 5.65357620 2.192684502 EHI01685 1.35161465 2.899183019 13.63258422 2.250942006 EHI01686 0.19573850 2.736074803 0.00000000 0.170793720 EHI01687 1.34357548 3.286828134 1.35950633 0.831925958 EHI01688 2.13017809 3.493284400 32.88670407 4.434704740 EHI01689 0.62155198 2.302449474 1.70819360 0.575944450 EHI01690 0.42542534 1.084872648 2.40195619 0.363542628 EHI01691 0.24671524 0.453689021 2.18094483 0.340008304 EHI01692 0.20971895 0.621246021 1.01014632 0.188834210 EHI01694 3.17468893 15.837625323 14.57502792 2.557468422 EHI01740 0.14679797 0.115087393 3.04570117 1.060693066 EHI01745 0.22727765 1.235185798 4.71647821 0.305830434 EHI01747 0.19300977 2.164406156 4.76179568 0.387048190 EHI01753 0.28371033 0.429742281 2.02582122 2.822956574 EHI01758 0.34236425 7.114834417 2.56234368 0.316843652 EHI01762 0.63957312 1.036104203 7.96170798 6.008014902 EHI01772 0.63659461 2.754986626 4.57861131 7.919308056 EHI01774 0.28433153 1.055684369 1.47619236 6.309218742 EHI01775 0.38451700 9.838050422 2.27817842 0.096762960 EHI01776 0.44053664 0.154935744 7.41260660 7.757906516 EHI01777 0.37234901 4.463745592 1.01275998 2.095922418 EHI02081 0.80515930 2.579763836 1.32813015 2.465043414 EHI02084 0.55435039 5.351847218 1.13140595 0.708218844 EHI02087 1.05574927 0.125823660 0.69922796 4.102048704 EHI02090 0.25094214 0.396707155 0.68282624 1.310719964 EHI02112 1.03417879 2.035116582 2.32950643 5.118615898 EHI02118 0.32069292 6.916035838 0.59058073 0.236855508 EHI02702 0.24096800 0.476491687 1.52521773 1.181668082 EHI02709 0.38316118 1.422224005 0.99056806 2.805451758 EHI02711 0.22599368 0.439756613 0.83715924 1.737200564 EHI02713 0.29473063 0.177926972 4.69095238 0.098394218 EHI02716 0.25875067 0.357912670 1.89182100 2.230597052 EHI02717 0.27883988 0.058636895 0.88825550 3.918651826 EHI02726 0.37013210 0.382268750 0.71728937 4.547605372 EHI02727 0.27079241 0.750941208 2.93913296 0.206715122 EHI02730 0.31241549 0.102368343 2.96897849 1.790924184 EHI02731 0.58363087 0.401953621 2.34065373 3.347565380 EHI02732 0.52409452 0.498724275 3.15616132 1.062360386 EHI02736 0.43495974 1.124528866 3.12623457 0.596060330 EHI02738 0.43713514 0.146403303 2.36261388 0.224351776 EHI02740 0.58761857 1.000795039 3.93726531 0.781460474 EHI02744 0.44405898 1.082765954 2.46052004 1.373304324 sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% summarise(across(where(is.numeric), mean, na.rm = TRUE)) %&gt;% tt() .table td.tinytable_css_id98pvhjvjn6ihhppcfqp0, .table th.tinytable_css_id98pvhjvjn6ihhppcfqp0 { border-bottom: solid 0.1em #d3d8dc; } Low quality Mapped to host Unmapped Mapped to MAGs 0.6130544 2.378678 2.765487 1.58612 sequence_fractions %&gt;% pivot_longer(!sample, names_to = &quot;fraction&quot;, values_to = &quot;value&quot;) %&gt;% mutate(value = value / 1000000000) %&gt;% mutate(fraction = factor(fraction, levels = c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;))) %&gt;% ggplot(., aes(x = sample, y = value, fill=fraction)) + geom_bar(position=&quot;stack&quot;, stat = &quot;identity&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ labs(x = &quot;Samples&quot;, y = &quot;Amount of data (GB)&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;bottom&quot;) 3.3 Recovered microbial fraction singlem_table &lt;- sequence_fractions %&gt;% mutate(mags_proportion = round((mags_bases / (mags_bases + unmapped_bases))*100,2)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% mutate(singlem_proportion = singlem_fraction) %&gt;% select(sample,mags_proportion,singlem_proportion) %&gt;% mutate(mags_proportion = ifelse(singlem_proportion == 0, 0, mags_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion == 0, NA, singlem_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion &lt; mags_proportion, NA, singlem_proportion)) %&gt;% #if singlem is smaller, then NA, to simplify plot mutate(singlem_proportion = ifelse(singlem_proportion &gt; 100, 100, singlem_proportion)) #simplify singlem_table %&gt;% pivot_longer(!sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate(proportion = factor(proportion, levels = c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;))) %&gt;% ggplot(., aes(x = value, y = sample, color=proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_classic() + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction (%)&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;right&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
